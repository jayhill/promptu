using System;
using System.Collections.Generic;
using System.Text;
using ZachJohnson.Promptu.PluginModel;
using ZachJohnson.Promptu.Skins;

namespace ZachJohnson.Promptu.SkinApi
{
    public abstract class PromptuSkin
    {
        private string id;
        private string name;
        private string creator;
        private string creatorContact;
        private string description;
        private string imagePath;
        private ISkinInstanceFactory instanceFactory;

        //public PromptuSkin(
        //    string name,
        //    string id,
        //    string creator,
        //    string creatorContact,
        //    string description,
        //    string imagePath,
        //    ILayoutManager layoutManager, 
        //    IPrompt prompt, 
        //    ISuggestionProvider suggestionProvider,
        //    PropertiesAndOptions informationBoxPropertiesAndOptions)
        //    : this(
        //        name,
        //        id,
        //        creator,
        //        creatorContact,
        //        description,
        //        imagePath,
        //        layoutManager, 
        //        prompt, 
        //        suggestionProvider,
        //        informationBoxPropertiesAndOptions,
        //        false)
        //{
        //}

        internal PromptuSkin(
            string name,
            string id,
            string creator,
            string creatorContact,
            string description,
            string imagePath,
            ISkinInstanceFactory instanceFactory)
            //ILayoutManager layoutManager, 
            //IPrompt prompt,
            //ISuggestionProvider suggestionProvider,
            //PropertiesAndOptions informationBoxPropertiesAndOptions,
            //bool isDefault)
        {
            if (id == null)
            {
                throw new ArgumentNullException("id");
            }

            this.name = name ?? Localization.UIResources.NoNameSkin;
            this.creator = creator;
            this.creatorContact = PromptuUtilities.SanitizeContactLink(creatorContact);
            this.description = description;
            this.imagePath = imagePath;
            this.id = id;
            this.instanceFactory = instanceFactory;

            //this.informationBoxPropertiesAndOptions = 
            //    informationBoxPropertiesAndOptions ?? 
            //    InternalGlobals.GuiManager.ToolkitHost.Factory.ConstructDefaultInformationBoxPropertiesAndOptions();

            //if (!isDefault)
            //{
            //    PromptuSkin defaultSkin = InternalGlobals.GuiManager.ToolkitHost.CreateDefaultSkinInstance();
            //    this.layoutManager = layoutManager ?? defaultSkin.LayoutManager;
            //    this.prompt = prompt ?? defaultSkin.Prompt;
            //    this.suggestionProvider = suggestionProvider ?? defaultSkin.SuggestionProvider;
            //}
            //else
            //{
            //    this.layoutManager = layoutManager;
            //    this.prompt = prompt;
            //    this.suggestionProvider = suggestionProvider;
            //}
        }

        public string Id
        {
            get { return this.id; }
        }

        public string Name
        {
            get { return this.name; }
        }

        public string ImagePath
        {
            get { return this.imagePath; }
        }

        public string Creator
        {
            get { return this.creator; }
        }

        public string CreatorContact
        {
            get { return this.creatorContact; }
        }

        public string Description
        {
            get { return this.description; }
        }

        internal ISkinInstanceFactory InstanceFactory
        {
            get { return this.instanceFactory; }
        }
    }
}
