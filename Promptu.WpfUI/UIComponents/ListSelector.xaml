<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ZachJohnson.Promptu.WpfUI.UIComponents" 
			 x:Class="ZachJohnson.Promptu.WpfUI.UIComponents.ListSelector"
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
             x:ClassModifier="internal" 
             mc:Ignorable="d">
	<UserControl.Resources>
		<ResourceDictionary>
			<Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
	  <Setter Property="Control.Template" Value="{x:Null}">
	  </Setter>
	</Style>
			<DataTemplate x:Key="ListDisplayItemTemplate">
				<Grid Height="Auto" Width="Auto" Background="#00000000"
					ContextMenu="{Binding ItemContextMenu, RelativeSource={RelativeSource AncestorType={x:Type local:WpfListListBox}}}">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Rectangle x:Name="image" Height="16" Width="16" Visibility="Collapsed" Grid.Column="0" Margin="0,0,4,-0.04" d:LayoutOverrides="GridBox"/>
					<TextBlock x:Name="name" Margin="0" Height="Auto" Text="{Binding Name}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="1" d:LayoutOverrides="Height" Background="#00000000" FontSize="12"/>
					<TextBlock x:Name="location" Text="{Binding ListSyncLocationDisplay}" Margin="11,0,0,5" Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" d:LayoutOverrides="Width" Background="#00000000" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Grid.Column="1" Grid.RowSpan="1" Visibility="Collapsed"/>
					<TextBlock x:Name="lastSync" Text="{Binding ListSyncTimeDisplay}" Margin="11,0,0,0" Grid.Row="2" TextWrapping="Wrap" VerticalAlignment="Top" Background="#00000000" Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Grid.Column="1" Grid.RowSpan="1" d:LayoutOverrides="Width" />
				</Grid>
				<DataTemplate.Triggers>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding ElementName=location, Path=Text, Converter={local:NotEqualConverter {x:Static sys:String.Empty}}}" Value="True"/>
							<!--Condition Value="True">
								<Condition.Binding>
									<Binding ElementName="location" Path="Text">
										<Binding.Converter>
											<local:NotEqualConverter>
												
											</local:NotEqualConverter>
										</Binding.Converter>
									</Binding>
								</Condition.Binding>
							</Condition-->
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}" Value="True"/>
						</MultiDataTrigger.Conditions>
						<Setter Property="Visibility" TargetName="location" Value="Visible"/>
					</MultiDataTrigger>
					<Trigger Property="Text" Value="" SourceName="lastSync">
						<Setter Property="Visibility" TargetName="lastSync" Value="Collapsed"/>
					</Trigger>
					<DataTrigger Binding="{Binding Enabled}" Value="False">
						<Setter Property="Fill" TargetName="image" Value="{StaticResource Disable}"/>
						<Setter Property="Visibility" TargetName="image" Value="Visible"/>
						<Setter Property="Foreground" TargetName="name" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
					</DataTrigger>
				</DataTemplate.Triggers>
				<!--<DataTemplate.Triggers>
					<DataTrigger Binding="{Binding Path=Enabled}" Value="True">
						<Setter Property="Source" TargetName="image">
							<Setter.Value>
								<local:DrawingBrushConverterExtension DrawingBrush="{StaticResource Enable}" />
							</Setter.Value>
						</Setter>
					</DataTrigger>
					<DataTrigger Binding="{Binding Path=Enabled}" Value="False">
						<Setter Property="Source" TargetName="image">
							<Setter.Value>
								<local:DrawingBrushConverterExtension DrawingBrush="{StaticResource Disable}" />
							</Setter.Value>
						</Setter>
					</DataTrigger>
				</DataTemplate.Triggers>-->
			</DataTemplate>
			<Storyboard x:Key="SyncAnimation">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="syncButton">
					<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
					<SplineDoubleKeyFrame KeyTime="0:0:1" Value="360" KeySpline="0,0,1,1"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Style x:Key="WpfListListBoxStyle1" TargetType="{x:Type local:WpfListListBox}">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
				<Setter Property="BorderBrush" Value="#FF828790"/>
				<Setter Property="BorderThickness" Value="1"/>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
				<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
				<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
				<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type local:WpfListListBox}">
							<Border x:Name="Bd" FocusVisualStyle="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="True" CornerRadius="3">
								<ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
									<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</ScrollViewer>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
								</Trigger>
								<Trigger Property="IsGrouping" Value="True">
									<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>
    <Grid>
    	<Grid.ColumnDefinitions>
    		<ColumnDefinition Width="Auto"/>
    		<ColumnDefinition/>
    	</Grid.ColumnDefinitions>
    	<Grid.RowDefinitions>
    		<RowDefinition Height="Auto"/>
    		<RowDefinition/>
    	</Grid.RowDefinitions>
    	<TextBlock x:Name="title" Margin="0,0,0,5" TextWrapping="Wrap" Text="ListsText" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Grid.ColumnSpan="2" TextOptions.TextFormattingMode="Display"/>
    	<StackPanel Grid.Row="1" Margin="2,0,3,0">
    		<local:WpfToolbarButton x:Name="syncButton" local:Custom.DrawingBackground="{StaticResource Refresh}" VerticalAlignment="Stretch" BorderThickness="0" Style="{DynamicResource PromptuToolbarButtonStyle}" ContentTemplate="{DynamicResource ImageBackgroundButton}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
    			<local:WpfToolbarButton.RenderTransform>
    				<TransformGroup>
    					<ScaleTransform/>
    					<SkewTransform/>
    					<RotateTransform/>
    					<TranslateTransform/>
    				</TransformGroup>
    			</local:WpfToolbarButton.RenderTransform>
    			<!--Rectangle x:Name="rectangle" Width="25" Height="25" Fill="{DynamicResource Refresh}" StrokeThickness="0" RenderTransformOrigin="0.5,0.5">
    			</Rectangle-->
    		</local:WpfToolbarButton>
    		<local:WpfSplitToolbarButton x:Name="newListButton" Focusable="False" local:Custom.DrawingBackground="{StaticResource NewList}" HorizontalAlignment="Center" VerticalAlignment="Stretch" Style="{DynamicResource SplitButtonStyle}" BorderThickness="1" ContentTemplate="{DynamicResource ImageBackgroundSplitButton}">
    			<local:WpfSplitToolbarButton.ContextMenu>
    				<ContextMenu>
                        <local:WpfMenuItem x:Name="newEmptyListMenuItem">
                            <local:WpfMenuItem.Icon>
                                <Image Width="18" Height="18">
                                    <Image.Source>
                                        <local:DrawingBrushConverterExtension DrawingBrush="{StaticResource NewList}" />
                                    </Image.Source>
                                </Image>
                            </local:WpfMenuItem.Icon>
                        </local:WpfMenuItem>
                        <local:WpfMenuItem x:Name="newDefaultListMenuItem">
                            <local:WpfMenuItem.Icon>
                                <Image Width="18" Height="18">
                                    <Image.Source>
                                        <local:DrawingBrushConverterExtension DrawingBrush="{StaticResource NewList}" />
                                    </Image.Source>
                                </Image>
                            </local:WpfMenuItem.Icon>
                        </local:WpfMenuItem>
    				</ContextMenu>
    			</local:WpfSplitToolbarButton.ContextMenu>
    		</local:WpfSplitToolbarButton>
    		<local:WpfSplitToolbarButton x:Name="incomingButton" Focusable="False" local:Custom.DrawingBackground="{StaticResource Incoming}" IsFullButton="True" HorizontalAlignment="Center" VerticalAlignment="Stretch" BorderThickness="0" Style="{DynamicResource MenuButtonStyle}" ContentTemplate="{DynamicResource ImageBackgroundSplitButton}">
    			<local:WpfSplitToolbarButton.ContextMenu>
    				<ContextMenu>
                        <local:WpfMenuItem x:Name="linkMenuItem">
                            <local:WpfMenuItem.Icon>
                                <Image Width="18" Height="18">
                                    <Image.Source>
                                        <local:DrawingBrushConverterExtension DrawingBrush="{StaticResource Link}" />
                                    </Image.Source>
                                </Image>
                            </local:WpfMenuItem.Icon>
                        </local:WpfMenuItem>
                        <local:WpfMenuItem x:Name="appendMenuItem">
                            <local:WpfMenuItem.Icon>
                                <Image Width="18" Height="18">
                                    <Image.Source>
                                        <local:DrawingBrushConverterExtension DrawingBrush="{StaticResource Import}" />
                                    </Image.Source>
                                </Image>
                            </local:WpfMenuItem.Icon>
                        </local:WpfMenuItem>
						<local:WpfMenuItem x:Name="importMenuItem">
                            <local:WpfMenuItem.Icon>
                                <Image Width="18" Height="18">
                                    <Image.Source>
                                        <local:DrawingBrushConverterExtension DrawingBrush="{StaticResource SlickRunImport}" />
                                    </Image.Source>
                                </Image>
                            </local:WpfMenuItem.Icon>
                        </local:WpfMenuItem>
    				</ContextMenu>
    			</local:WpfSplitToolbarButton.ContextMenu>
    		</local:WpfSplitToolbarButton>
    		<local:WpfSplitToolbarButton x:Name="outgoingButton" Focusable="False" local:Custom.DrawingBackground="{StaticResource Outgoing}" IsFullButton="True" HorizontalAlignment="Center" VerticalAlignment="Stretch" BorderThickness="0" Style="{DynamicResource MenuButtonStyle}" ContentTemplate="{DynamicResource ImageBackgroundSplitButton}">
    			<local:WpfSplitToolbarButton.ContextMenu>
    				<ContextMenu>
                        <local:WpfMenuItem x:Name="publishMenuItem">
                            <local:WpfMenuItem.Icon>
                                <Image Width="18" Height="18">
                                    <Image.Source>
                                        <local:DrawingBrushConverterExtension DrawingBrush="{StaticResource Publish}" />
                                    </Image.Source>
                                </Image>
                            </local:WpfMenuItem.Icon>
                        </local:WpfMenuItem>
                        <local:WpfMenuItem x:Name="exportMenuItem">
                            <local:WpfMenuItem.Icon>
                                <Image Width="18" Height="18">
                                    <Image.Source>
                                        <local:DrawingBrushConverterExtension DrawingBrush="{StaticResource Export}" />
                                    </Image.Source>
                                </Image>
                            </local:WpfMenuItem.Icon>
                        </local:WpfMenuItem>
    				</ContextMenu>
    			</local:WpfSplitToolbarButton.ContextMenu>
			</local:WpfSplitToolbarButton>
    		<local:WpfToolbarButton x:Name="enableButton" local:Custom.DrawingBackground="{StaticResource Enable}" VerticalAlignment="Stretch" BorderThickness="0" Style="{DynamicResource PromptuToolbarButtonStyle}" ContentTemplate="{DynamicResource ImageBackgroundButton}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
    		</local:WpfToolbarButton>
    		<local:WpfToolbarButton x:Name="disableButton" local:Custom.DrawingBackground="{StaticResource Disable}" VerticalAlignment="Stretch" BorderThickness="0" Style="{DynamicResource PromptuToolbarButtonStyle}" ContentTemplate="{DynamicResource ImageBackgroundButton}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
    		</local:WpfToolbarButton>
    		<local:WpfToolbarButton x:Name="unsubscribeButton" local:Custom.DrawingBackground="{StaticResource Unsubscribe}" VerticalAlignment="Stretch" BorderThickness="0" Style="{DynamicResource PromptuToolbarButtonStyle}" ContentTemplate="{DynamicResource ImageBackgroundButton}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
    		</local:WpfToolbarButton>
			<local:WpfToolbarButton x:Name="renameButton" local:Custom.DrawingBackground="{StaticResource Rename}" VerticalAlignment="Stretch" BorderThickness="0" Style="{DynamicResource PromptuToolbarButtonStyle}" ContentTemplate="{DynamicResource ImageBackgroundButton}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
    		</local:WpfToolbarButton>
			<local:WpfToolbarButton x:Name="deleteButton" local:Custom.DrawingBackground="{StaticResource RedX}" VerticalAlignment="Stretch" BorderThickness="0" Style="{DynamicResource PromptuToolbarButtonStyle}" ContentTemplate="{DynamicResource ImageBackgroundButton}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
    		</local:WpfToolbarButton>
			<local:WpfToolbarButton x:Name="moveListUpButton" local:Custom.DrawingBackground="{StaticResource MainUpArrow}" VerticalAlignment="Stretch" BorderThickness="0" Style="{DynamicResource PromptuToolbarButtonStyle}" ContentTemplate="{DynamicResource ImageBackgroundButton}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
    		</local:WpfToolbarButton>
			<local:WpfToolbarButton x:Name="moveListDownButton" local:Custom.DrawingBackground="{StaticResource MainDownArrow}" VerticalAlignment="Stretch" BorderThickness="0" Style="{DynamicResource PromptuToolbarButtonStyle}" ContentTemplate="{DynamicResource ImageBackgroundButton}" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
    		</local:WpfToolbarButton>
    	</StackPanel>
    	<Grid Grid.Row="1" Grid.Column="1">
    		<Grid.Resources>
    			<Style x:Key="ListItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource DefaultListBoxItemSelectionStyle}">
    				<Setter Property="AllowDrop" Value="True"/>				
				</Style>
			</Grid.Resources>
    		<Grid.RowDefinitions>
    			<RowDefinition Height="0.817*"/>
    		</Grid.RowDefinitions>
    		<local:WpfListListBox x:Name="listsListBox" VirtualizingStackPanel.VirtualizationMode="Recycling" Margin="0" BorderThickness="1" ItemsSource="{Binding}" ItemTemplate="{DynamicResource ListDisplayItemTemplate}" TextOptions.TextFormattingMode="Display" ItemContainerStyle="{StaticResource ListItemStyle}" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" Style="{DynamicResource WpfListListBoxStyle1}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">		
			</local:WpfListListBox>
    		<TextBlock x:Name="noListsMessage" TextWrapping="Wrap" Text="TextBlock" HorizontalAlignment="Center" VerticalAlignment="Top" d:LayoutOverrides="VerticalAlignment" d:IsHidden="True"/>
    	</Grid>
    </Grid>
</UserControl>
