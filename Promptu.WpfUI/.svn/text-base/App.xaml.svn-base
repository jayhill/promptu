<Application x:Class="Promptu.WpfUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
			 xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
			 xmlns:UIComponents="clr-namespace:ZachJohnson.Promptu.WpfUI.UIComponents"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" xmlns:ee="http://schemas.microsoft.com/expression/2010/effects" mc:Ignorable="d">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
            		<ResourceDictionary Source="/Promptu.WpfUI;component/Images/PromptuIcons.xaml"/>
            		<ResourceDictionary Source="Images/AboutResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        	<Style x:Key="LinkButton" TargetType="{x:Type Button}">
        		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
				<Setter Property="Cursor" Value="Hand"/>
				<Setter Property="Background" Value="{x:Null}"/>
				<Setter Property="BorderBrush" Value="{x:Null}"/>
				<Setter Property="Foreground" Value="{x:Null}"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Border BorderBrush="Black" BorderThickness="0" Height="Auto">
        						<VisualStateManager.VisualStateGroups>
        							<VisualStateGroup x:Name="CommonStates">
        								<VisualStateGroup.Transitions>
        									<VisualTransition GeneratedDuration="0:0:0.3" To="MouseOver"/>
        									<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3"/>
        								</VisualStateGroup.Transitions>
        								<VisualState x:Name="Normal"/>
        								<VisualState x:Name="MouseOver">
        									<Storyboard>
        										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
        											<EasingColorKeyFrame KeyTime="0" Value="#FF0078EF"/>
        										</ColorAnimationUsingKeyFrames>
        									</Storyboard>
        								</VisualState>
        								<VisualState x:Name="Pressed"/>
        								<VisualState x:Name="Disabled"/>
        							</VisualStateGroup>
        						</VisualStateManager.VisualStateGroups>
        						<TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{TemplateBinding Content}" TextDecorations="Underline" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="#FF003399" Background="{x:Null}"/>
        					</Border>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
			<Style x:Key="MenuButtonStyle" TargetType="{x:Type UIComponents:WpfSplitToolbarButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Padding" Value="2"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type UIComponents:WpfSplitToolbarButton}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="fade-in">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bd_selection">
									<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid1">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1" KeySpline="0,0,0,1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid1">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1" KeySpline="0,0,0,1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="grow-arrow"/>
							<Storyboard x:Key="grow-content">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="bd_selection">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="bd_selection">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Bd">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Bd">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid1" Margin="0" RenderTransformOrigin="0.5,0.5">
							<Grid.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Grid.RenderTransform>
							<Border x:Name="bd_selection" BorderBrush="{DynamicResource BorderBrush}" Background="{DynamicResource SelectionBrush}" SnapsToDevicePixels="False" Grid.ColumnSpan="1" CornerRadius="2" Opacity="0" RenderTransformOrigin="0.5,0.5" Padding="1" Margin="0" d:LayoutOverrides="GridBox" BorderThickness="1">
								<Border.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Border.RenderTransform>
							</Border>
							<Border x:Name="Bd" SnapsToDevicePixels="False" Grid.ColumnSpan="1" CornerRadius="0" RenderTransformOrigin="0.5,0.5" Padding="1" Margin="0" d:LayoutOverrides="GridBox" BorderThickness="1">
								<Border.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Border.RenderTransform>
								<Grid x:Name="grid" Margin="0" RenderTransformOrigin="0.5,0.5">
									<Grid.RenderTransform>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform/>
											<TranslateTransform/>
										</TransformGroup>
									</Grid.RenderTransform>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="Auto" MinWidth="11.997"/>
									</Grid.ColumnDefinitions>
									<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0"/>
									<Border x:Name="arrowElement" BorderThickness="1" Grid.Column="1">
										<Path x:Name="path" Data="M45.001049,5.0003209 L61.000706,5.0003209 53.000877,13.000321 z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Height="4" Margin="3,0" Stretch="Fill" VerticalAlignment="Center" Width="5" Opacity="1"/>
									</Border>
								</Grid>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="ContextMenuIsOpen" Value="True">
								<Setter Property="Opacity" TargetName="bd_selection" Value="1"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Trigger.ExitActions>
									<RemoveStoryboard BeginStoryboardName="fade_in_BeginStoryboard2"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="fade_in_BeginStoryboard2" Storyboard="{StaticResource fade-in}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="IsPressed" Value="true"/>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="grid1" Value="0.5"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="SplitButtonStyle" TargetType="{x:Type UIComponents:WpfSplitToolbarButton}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Padding" Value="2"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="HorizontalAlignment" Value="Center"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type UIComponents:WpfSplitToolbarButton}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="fade-in">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bd_selection">
									<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="arrowElement">
									<SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="grow-arrow">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="arrowElement">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1" KeySpline="0,0,0,1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="arrowElement">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1" KeySpline="0,0,0,1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="arrowElement2">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="arrowElement2">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="grow-content">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="bd_selection">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="bd_selection">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Bd">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1" KeySpline="0,0,0,1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Bd">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1" KeySpline="0,0,0,1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid" Margin="1" RenderTransformOrigin="0.5,0.5">
							<Grid.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Grid.RenderTransform>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto" MinWidth="11.997"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="bd_selection" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource SelectionBrush}" SnapsToDevicePixels="False" Grid.ColumnSpan="1" CornerRadius="2" Opacity="0" RenderTransformOrigin="0.5,0.5" Padding="1">
								<Border.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Border.RenderTransform>
							</Border>
							<Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="False" Grid.ColumnSpan="1" CornerRadius="0" RenderTransformOrigin="0.5,0.5" Padding="1,1,0,1">
								<Border.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Border.RenderTransform>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="0"/>
							</Border>
							<Border x:Name="arrowElement" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,1,1,1" Grid.Column="1" HorizontalAlignment="Right" Margin="0" Width="{Binding ActualWidth, ElementName=arrowElement2}" Background="{DynamicResource SelectionBrush}" CornerRadius="2" Opacity="0" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="True">
								<Border.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Border.RenderTransform>
							</Border>
							<Border x:Name="arrowElement2" BorderThickness="0,1,1,1" Grid.Column="1" HorizontalAlignment="Right" Margin="0" Width="Auto" CornerRadius="2" RenderTransformOrigin="0.5,0.5" IsHitTestVisible="False">
								<Border.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Border.RenderTransform>
								<Path x:Name="path" Data="M45.001049,5.0003209 L61.000706,5.0003209 53.000877,13.000321 z" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" Height="4" Margin="3,0" Stretch="Fill" VerticalAlignment="Center" Width="5" Opacity="1"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="ContextMenuIsOpen" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="fade_in_BeginStoryboard" Storyboard="{StaticResource fade-in}"/>
									<SkipStoryboardToFill BeginStoryboardName="fade_in_BeginStoryboard"/>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<RemoveStoryboard BeginStoryboardName="fade_in_BeginStoryboard"/>
								</Trigger.ExitActions>
							</Trigger>
							<Trigger Property="IsMouseOver" SourceName="Bd" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard
										x:Name="grow_content_BeginStoryboard" Storyboard="{StaticResource grow-content}"/>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<RemoveStoryboard
										BeginStoryboardName="grow_content_BeginStoryboard"/>
								</Trigger.ExitActions>
							</Trigger>
							<Trigger Property="IsMouseOver" SourceName="bd_selection" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard
										x:Name="grow_content_BeginStoryboard2" Storyboard="{StaticResource grow-content}"/>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<RemoveStoryboard
										BeginStoryboardName="grow_content_BeginStoryboard2"/>
								</Trigger.ExitActions>
							</Trigger>
							<Trigger Property="IsMouseOver" SourceName="arrowElement" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard
										x:Name="grow_arrow_BeginStoryboard2" Storyboard="{StaticResource grow-arrow}"/>
								</Trigger.EnterActions>
								<Trigger.ExitActions>
									<RemoveStoryboard
										BeginStoryboardName="grow_arrow_BeginStoryboard2"/>
								</Trigger.ExitActions>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Trigger.ExitActions>
									<RemoveStoryboard BeginStoryboardName="fade_in_BeginStoryboard2"/>
								</Trigger.ExitActions>
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="fade_in_BeginStoryboard2" Storyboard="{StaticResource fade-in}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true"/>
							<Trigger Property="IsPressed" Value="true"/>
							<Trigger Property="IsEnabled" Value="false"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!-- Resource dictionary entries should be defined here. -->
		<!--<LinearGradientBrush x:Key="SelectionBrush" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#0ECEB71B" Offset="0"/>
			<GradientStop Color="#36CEB71B" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="BorderBrush" Color="#FFD8B847"/>-->
		<LinearGradientBrush x:Key="SelectionBrush" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#3EADEAFF" Offset="0.224"/>
			<GradientStop Color="#6C56D4FF" Offset="0.64"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="BorderBrush" Color="#7339CDFF"/>
		<SolidColorBrush x:Key="HighlightBorderColor" Color="#7339CDFF"/>
		<LinearGradientBrush x:Key="HighlightBackground" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="#3EADEAFF" Offset="0.224"/>
			<GradientStop Color="#5656D4FF" Offset="0.64"/>
		</LinearGradientBrush>
		<Style x:Key="PromptuToolbarButtonStyle" TargetType="{x:Type UIComponents:WpfToolbarButton}">
			<!--Setter Property="FocusVisualStyle" Value="{x:Null}"/-->
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
						<GradientStop Color="#FFF3F3F3" Offset="0"/>
						<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
						<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
						<GradientStop Color="#FFCDCDCD" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderBrush" Value="#FF707070"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type UIComponents:WpfToolbarButton}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="fade-in">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
									<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1" KeySpline="0,0,0,1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
									<SplineDoubleKeyFrame KeyTime="0:0:0.5" Value="1.1" KeySpline="0,0,0,1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="fade-partly-in">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
									<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="0.495"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
							<Grid.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Grid.RenderTransform>
							<Border x:Name="border" BorderThickness="1" CornerRadius="3" Opacity="0" Background="{DynamicResource SelectionBrush}" BorderBrush="{DynamicResource BorderBrush}" RenderTransformOrigin="0.5,0.5">
								<Border.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Border.RenderTransform>
							</Border>
							<Border BorderBrush="{x:Null}" BorderThickness="1" Margin="0">
								<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="FullDisable" Value="True"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.EnterActions>
									<BeginStoryboard
							x:Name="fade_in_BeginStoryboard" Storyboard="{StaticResource fade-in}"/>
								</MultiTrigger.EnterActions>
								<MultiTrigger.ExitActions>
									<RemoveStoryboard
							BeginStoryboardName="fade_in_BeginStoryboard"/>
								</MultiTrigger.ExitActions>
								<Setter
							Property="Background" TargetName="border" Value="{DynamicResource SelectionBrush}"/>
								<Setter
							Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrush}"/>
							</MultiTrigger>
							<Trigger Property="IsKeyboardFocused" Value="True"/>
							<Trigger Property="ToggleButton.IsChecked" Value="True"/>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsEnabled" Value="False"/>
									<Condition Property="FullDisable" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter
									Property="Opacity" TargetName="grid" Value="0.5"/>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<DataTemplate x:Key="ImageBackgroundButton">
			<Grid>
				<Rectangle Fill="{Binding Path=(UIComponents:Custom.DrawingBackground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UIComponents:WpfToolbarButton}}}" Margin="0" Width="25" Height="25"/>
			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="ImageBackgroundSplitButton">
			<Grid>
				<Rectangle Fill="{Binding Path=(UIComponents:Custom.DrawingBackground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UIComponents:WpfSplitToolbarButton}}}" Margin="0" Width="25" Height="25"/>
			</Grid>
		</DataTemplate>
		<Style x:Key="DefaultListBoxItemSelectionStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid Margin="0,0,0,1" Background="Transparent">
							<Border x:Name="Bd" SnapsToDevicePixels="True" CornerRadius="2" BorderThickness="1" Margin="0" d:LayoutOverrides="Height"/>
							<Border x:Name="Bd_Copy" SnapsToDevicePixels="True" CornerRadius="2" BorderThickness="1" Margin="0" d:LayoutOverrides="Height">
								<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="3,1,1,1"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="Selector.IsSelected" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter
							Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HighlightBorderColor}"/>
								<Setter
							Property="Opacity" TargetName="Bd" Value="0.5"/>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource HighlightBackground}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="Selector.IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter
							Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HighlightBorderColor}"/>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource HighlightBackground}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="False"/>
									<Condition Property="Selector.IsSelected" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HighlightBorderColor}"/>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource HighlightBackground}"/>
								<Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DefaultComboBoxItemSelectionStyle" TargetType="{x:Type ComboBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBoxItem}">
						<Grid Margin="0,0,0,1">
							<Border x:Name="Bd" IsHitTestVisible="False" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type VirtualizingStackPanel}}}" SnapsToDevicePixels="True" CornerRadius="2" BorderThickness="1" Margin="0" d:LayoutOverrides="Height"/>
							<Border x:Name="Bd_Copy" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type VirtualizingStackPanel}}}" SnapsToDevicePixels="True" CornerRadius="2" BorderThickness="1" Margin="0" d:LayoutOverrides="Height">
								<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Stretch" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="3,1,1,1"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsHighlighted" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HighlightBorderColor}"/>
								<Setter Property="Opacity" TargetName="Bd" Value="0.5"/>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource HighlightBackground}"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<!--Condition Property="IsMouseOver" Value="True"/-->
									<Condition Property="IsHighlighted" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HighlightBorderColor}"/>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource HighlightBackground}"/>
							</MultiTrigger>
							<!--MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="False"/>
									<Condition Property="IsHighlighted" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource HighlightBorderColor}"/>
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource HighlightBackground}"/>
								<Setter Property="Opacity" TargetName="Bd" Value="0.8"/>
							</MultiTrigger-->
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="MainInstructionsForeground" Color="#FF003399"/>
		<Style x:Key="PromptuCheckBoxButton" TargetType="{x:Type UIComponents:WpfCheckBoxButton}">
			<!--Setter Property="FocusVisualStyle" Value="{x:Null}"/-->
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
						<GradientStop Color="#FFF3F3F3" Offset="0"/>
						<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
						<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
						<GradientStop Color="#FFCDCDCD" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderBrush" Value="#FF707070"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type UIComponents:WpfCheckBoxButton}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="fade-in">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
									<SplineDoubleKeyFrame KeyTime="0" Value="0.7"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
							<Storyboard x:Key="fade-partly-in">
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
									<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="0.495"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid x:Name="grid">
							<Border x:Name="border" BorderThickness="1" Margin="1" CornerRadius="3" Opacity="0" Background="{DynamicResource SelectionBrush}" BorderBrush="{DynamicResource BorderBrush}" RenderTransformOrigin="0.5,0.5"/>
							<Border BorderBrush="{x:Null}" BorderThickness="1" Margin="0" Padding="1">
								<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<MultiTrigger.EnterActions>
									<BeginStoryboard
										x:Name="fade_in_BeginStoryboard" Storyboard="{StaticResource fade-in}"/>
								</MultiTrigger.EnterActions>
								<MultiTrigger.ExitActions>
									<RemoveStoryboard
										BeginStoryboardName="fade_in_BeginStoryboard"/>
								</MultiTrigger.ExitActions>
								<Setter
									Property="Background" TargetName="border" Value="{DynamicResource SelectionBrush}"/>
								<Setter
									Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrush}"/>
							</MultiTrigger>
							<Trigger Property="IsKeyboardFocused" Value="True"/>
							<Trigger Property="Checked" Value="True">
								<Setter Property="Opacity" TargetName="border" Value="1"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsEnabled" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter
									Property="Opacity" TargetName="grid" Value="0.5"/>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<DataTemplate x:Key="ImageAndTextButton">
			<StackPanel Height="Auto" Width="Auto" Orientation="Horizontal">
				<Image Height="18" Width="18" Source="{Binding Image, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UIComponents:WpfToolbarButton}}}" Margin="0,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
				<TextBlock TextWrapping="NoWrap" Margin="0,0,1,0" Text="{Binding}" VerticalAlignment="Center"/>
			</StackPanel>
		</DataTemplate>
		<DataTemplate x:Key="ImageFillAndTextButton">
			<StackPanel Height="Auto" Width="Auto" Orientation="Horizontal">
				<Rectangle Height="18" Width="18" Fill="{Binding Path=(UIComponents:Custom.DrawingBackground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Margin="0,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
				<TextBlock TextWrapping="NoWrap" Margin="0,0,1,0" Text="{Binding}" VerticalAlignment="Center"/>
			</StackPanel>
		</DataTemplate>
		<DataTemplate x:Key="SmallImageButton">
			<Grid>
				<Rectangle Fill="{Binding Path=(UIComponents:Custom.DrawingBackground), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UIComponents:WpfToolbarButton}}}" Margin="0" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			</Grid>
		</DataTemplate>
		<Style x:Key="DataGridButtonStyle" TargetType="{x:Type Button}">
					<!--Setter Property="FocusVisualStyle" Value="{x:Null}"/-->
					<Setter Property="Background">
						<Setter.Value>
							<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
								<GradientStop Color="#FFF3F3F3" Offset="0"/>
								<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
								<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
								<GradientStop Color="#FFCDCDCD" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
					<Setter Property="BorderBrush" Value="#FF707070"/>
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
					<Setter Property="HorizontalContentAlignment" Value="Center"/>
					<Setter Property="VerticalContentAlignment" Value="Center"/>
					<Setter Property="Padding" Value="1"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Button}">
								<ControlTemplate.Resources>
									<Storyboard x:Key="fade-in">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard x:Key="fade-partly-in">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
											<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="0.495"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ControlTemplate.Resources>
								<Grid x:Name="grid">
									<Border x:Name="border" BorderThickness="1" Margin="1" CornerRadius="3" Opacity="0" RenderTransformOrigin="0.5,0.5" BorderBrush="#FFB4B4B4">
										<Border.Background>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFFDFCFC" Offset="0.224"/>
												<GradientStop Color="#FFD4D4D4" Offset="0.638"/>
											</LinearGradientBrush>
										</Border.Background>
									</Border>
									<Border BorderBrush="{x:Null}" BorderThickness="1" Margin="0" Padding="1">
										<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Border>
								</Grid>
								<ControlTemplate.Triggers>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="True"/>
										</MultiTrigger.Conditions>
										<MultiTrigger.EnterActions>
											<BeginStoryboard
												x:Name="fade_in_BeginStoryboard" Storyboard="{StaticResource fade-in}"/>
										</MultiTrigger.EnterActions>
										<MultiTrigger.ExitActions>
											<RemoveStoryboard
												BeginStoryboardName="fade_in_BeginStoryboard"/>
										</MultiTrigger.ExitActions>
									</MultiTrigger>
									<Trigger Property="IsKeyboardFocused" Value="True"/>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsEnabled" Value="False"/>
										</MultiTrigger.Conditions>
										<Setter
											Property="Opacity" TargetName="grid" Value="0.5"/>
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<Style x:Key="SubduedCheckBoxButtonStyle" TargetType="{x:Type CheckBox}">
					<!--Setter Property="FocusVisualStyle" Value="{x:Null}"/-->
					<Setter Property="Background">
						<Setter.Value>
							<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
								<GradientStop Color="#FFF3F3F3" Offset="0"/>
								<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
								<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
								<GradientStop Color="#FFCDCDCD" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
					<Setter Property="BorderBrush" Value="#FF707070"/>
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
					<Setter Property="HorizontalContentAlignment" Value="Center"/>
					<Setter Property="VerticalContentAlignment" Value="Center"/>
					<Setter Property="Padding" Value="1"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type CheckBox}">
								<ControlTemplate.Resources>
									<Storyboard x:Key="fade-in">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.7"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard x:Key="fade-partly-in">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
											<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="0.495"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ControlTemplate.Resources>
								<Grid x:Name="grid">
									<Border x:Name="border" BorderThickness="1" Margin="1" CornerRadius="3" Opacity="0" Background="{DynamicResource SelectionBrush}" BorderBrush="{DynamicResource BorderBrush}" RenderTransformOrigin="0.5,0.5"/>
									<Border BorderBrush="{x:Null}" BorderThickness="1" Margin="0" Padding="1">
										<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Border>
								</Grid>
								<ControlTemplate.Triggers>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="True"/>
										</MultiTrigger.Conditions>
										<MultiTrigger.EnterActions>
											<BeginStoryboard
												x:Name="fade_in_BeginStoryboard" Storyboard="{StaticResource fade-in}"/>
										</MultiTrigger.EnterActions>
										<MultiTrigger.ExitActions>
											<RemoveStoryboard
												BeginStoryboardName="fade_in_BeginStoryboard"/>
										</MultiTrigger.ExitActions>
										<Setter
											Property="Background" TargetName="border" Value="{DynamicResource SelectionBrush}"/>
										<Setter
											Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrush}"/>
									</MultiTrigger>
									<Trigger Property="IsChecked" Value="True">
										<Setter Property="Opacity" TargetName="border" Value="1"/>
									</Trigger>
									<Trigger Property="IsKeyboardFocused" Value="True"/>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsEnabled" Value="False"/>
										</MultiTrigger.Conditions>
										<Setter
											Property="Opacity" TargetName="grid" Value="0.5"/>
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
		<Style x:Key="SubduedButtonStyle" TargetType="{x:Type Button}">
					<!--Setter Property="FocusVisualStyle" Value="{x:Null}"/-->
					<Setter Property="Background">
						<Setter.Value>
							<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
								<GradientStop Color="#FFF3F3F3" Offset="0"/>
								<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
								<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
								<GradientStop Color="#FFCDCDCD" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
					<Setter Property="BorderBrush" Value="#FF707070"/>
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
					<Setter Property="HorizontalContentAlignment" Value="Center"/>
					<Setter Property="VerticalContentAlignment" Value="Center"/>
					<Setter Property="Padding" Value="1"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Button}">
								<ControlTemplate.Resources>
									<Storyboard x:Key="fade-in">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									<Storyboard x:Key="fade-partly-in">
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
											<SplineDoubleKeyFrame KeyTime="0:0:0.6" Value="0.495"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</ControlTemplate.Resources>
								<Grid x:Name="grid">
									<Border x:Name="border" BorderThickness="1" Margin="1" CornerRadius="3" Opacity="0" Background="{DynamicResource SelectionBrush}" BorderBrush="{DynamicResource BorderBrush}" RenderTransformOrigin="0.5,0.5"/>
									<Border BorderBrush="{x:Null}" BorderThickness="1" Margin="0" Padding="1">
										<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Border>
								</Grid>
								<ControlTemplate.Triggers>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsMouseOver" Value="True"/>
										</MultiTrigger.Conditions>
										<MultiTrigger.EnterActions>
											<BeginStoryboard
												x:Name="fade_in_BeginStoryboard" Storyboard="{StaticResource fade-in}"/>
										</MultiTrigger.EnterActions>
										<MultiTrigger.ExitActions>
											<RemoveStoryboard
												BeginStoryboardName="fade_in_BeginStoryboard"/>
										</MultiTrigger.ExitActions>
										<Setter
											Property="Background" TargetName="border" Value="{DynamicResource SelectionBrush}"/>
										<Setter
											Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrush}"/>
									</MultiTrigger>
									<Trigger Property="IsKeyboardFocused" Value="True"/>
									<MultiTrigger>
										<MultiTrigger.Conditions>
											<Condition Property="IsEnabled" Value="False"/>
										</MultiTrigger.Conditions>
										<Setter
											Property="Opacity" TargetName="grid" Value="0.5"/>
									</MultiTrigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<Style x:Key="VistaDataGridCellStyle" TargetType="{x:Type DataGridCell}">
					<Setter Property="Background" Value="Transparent"/>
					<Setter Property="BorderBrush" Value="Transparent"/>
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type DataGridCell}">
								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
									<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{DynamicResource HighlightBackground}"/>
							<Setter Property="BorderBrush" Value="{DynamicResource HighlightBorderColor}"/>
							<Setter Property="Foreground" Value="Black"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocusWithin" Value="True"/>
					</Style.Triggers>
				</Style>
				<ControlTemplate x:Key="KeyCheckBox" TargetType="{x:Type CheckBox}">
					<Grid Width="Auto" Height="Auto">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
									<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="overlay">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="overlay">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkedOverlay">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle Margin="0" Stroke="#FFCCCCCC" StrokeThickness="1" RadiusX="4" RadiusY="4" SnapsToDevicePixels="False">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.94,0.956" MappingMode="RelativeToBoundingBox" StartPoint="0.071,0.067">
									<GradientStop Color="#FFCCCCCC"/>
									<GradientStop Color="#FFEDEDED" Offset="0.558"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Rectangle Margin="0" StrokeThickness="1" RadiusX="4" RadiusY="4" SnapsToDevicePixels="False">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.064,0.933" MappingMode="RelativeToBoundingBox" StartPoint="0.951,0.019">
									<GradientStop Color="#FFC0BFBF" Offset="0"/>
									<GradientStop Offset="0.428"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Rectangle Margin="0" StrokeThickness="1" RadiusX="4" RadiusY="4" SnapsToDevicePixels="False">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.939,0.93" MappingMode="RelativeToBoundingBox" StartPoint="0.071,0.073">
									<GradientStop Color="#FFCCC8C8" Offset="0"/>
									<GradientStop Offset="0.334"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Rectangle Margin="4" StrokeThickness="1" RadiusX="3" RadiusY="3" SnapsToDevicePixels="False">
							<Rectangle.Stroke>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="#FFDADADA" Offset="0.332"/>
									<GradientStop Color="White" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Stroke>
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.273,0.092" StartPoint="0.652,0.993">
									<GradientStop Color="#FFE0E0E0" Offset="0"/>
									<GradientStop Color="White" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Rectangle x:Name="checkedOverlay" Margin="0" Stroke="{DynamicResource HighlightBorderColor}" StrokeThickness="1" RadiusX="3" RadiusY="3" Fill="{DynamicResource HighlightBackground}" Opacity="0" SnapsToDevicePixels="False"/>
						<ContentPresenter Margin="8,6" RecognizesAccessKey="True"/>
						<Rectangle x:Name="overlay" Margin="0.625,0.542,-0.625,-0.542" Stroke="{DynamicResource HighlightBorderColor}" StrokeThickness="1" RadiusX="3" RadiusY="3" Fill="{DynamicResource HighlightBackground}" Opacity="0" SnapsToDevicePixels="False"/>
					</Grid>
				</ControlTemplate>
				<Style x:Key="WpfKeyComboBox" TargetType="{x:Type UIComponents:WpfComboInput}">
					<Setter Property="FocusVisualStyle">
						<Setter.Value>
							<Style>
								<Setter Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
					<Setter Property="Background">
						<Setter.Value>
							<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
								<GradientStop Color="#FFF3F3F3" Offset="0"/>
								<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
								<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
								<GradientStop Color="#FFCDCDCD" Offset="1"/>
							</LinearGradientBrush>
						</Setter.Value>
					</Setter>
					<Setter Property="BorderBrush" Value="#FF707070"/>
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
					<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
					<Setter Property="Padding" Value="4,3"/>
					<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
					<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
					<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type UIComponents:WpfComboInput}">
								<Grid x:Name="MainGrid" SnapsToDevicePixels="True">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition MinWidth="10" Width="21"/>
									</Grid.ColumnDefinitions>
									<VisualStateManager.VisualStateGroups>
										<VisualStateGroup x:Name="CommonStates">
											<VisualStateGroup.Transitions>
												<VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver"/>
												<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2"/>
											</VisualStateGroup.Transitions>
											<VisualState x:Name="Normal"/>
											<VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="overlay">
														<EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</VisualState>
											<VisualState x:Name="Disabled"/>
										</VisualStateGroup>
									</VisualStateManager.VisualStateGroups>
									<Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
										<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
											<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
												<ScrollViewer x:Name="DropDownScrollViewer">
													<Grid RenderOptions.ClearTypeHint="Enabled">
														<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
															<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
														</Canvas>
														<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
													</Grid>
												</ScrollViewer>
											</Border>
										</Microsoft_Windows_Themes:SystemDropShadowChrome>
									</Popup>
									<Rectangle Margin="0" Stroke="#FFCCCCCC" StrokeThickness="1" RadiusX="4" RadiusY="4" SnapsToDevicePixels="False" Grid.ColumnSpan="2">
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint="0.94,0.956" MappingMode="RelativeToBoundingBox" StartPoint="0.071,0.067">
												<GradientStop Color="#FFCCCCCC"/>
												<GradientStop Color="#FFEDEDED" Offset="0.558"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle Margin="0" StrokeThickness="1" RadiusX="4" RadiusY="4" SnapsToDevicePixels="False" Grid.ColumnSpan="2">
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint="0.064,0.933" MappingMode="RelativeToBoundingBox" StartPoint="0.951,0.019">
												<GradientStop Color="#FFC0BFBF" Offset="0"/>
												<GradientStop Offset="0.428"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle Margin="0" StrokeThickness="1" RadiusX="4" RadiusY="4" SnapsToDevicePixels="False" Grid.ColumnSpan="2">
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint="0.939,0.93" MappingMode="RelativeToBoundingBox" StartPoint="0.071,0.073">
												<GradientStop Color="#FFCCC8C8" Offset="0"/>
												<GradientStop Offset="0.334"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle Margin="4" StrokeThickness="1" RadiusX="3" RadiusY="3" SnapsToDevicePixels="False" Grid.ColumnSpan="2">
										<Rectangle.Stroke>
											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
												<GradientStop Color="#FFDADADA" Offset="0.332"/>
												<GradientStop Color="White" Offset="1"/>
											</LinearGradientBrush>
										</Rectangle.Stroke>
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint="0.273,0.092" StartPoint="0.652,0.993">
												<GradientStop Color="#FFE0E0E0" Offset="0"/>
												<GradientStop Color="White" Offset="1"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle x:Name="checkedOverlay" Margin="0" Stroke="{DynamicResource HighlightBorderColor}" StrokeThickness="1" RadiusX="3" RadiusY="3" Fill="{DynamicResource HighlightBackground}" Opacity="0" SnapsToDevicePixels="False" Grid.ColumnSpan="2"/>
									<Rectangle x:Name="overlay" Margin="0" Stroke="{DynamicResource HighlightBorderColor}" StrokeThickness="1" RadiusX="3" RadiusY="3" Fill="{DynamicResource HighlightBackground}" Opacity="0" SnapsToDevicePixels="False" Grid.ColumnSpan="2" IsHitTestVisible="False"/>
									<ToggleButton BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="8,6,7,6">
										<ToggleButton.Style>
											<Style TargetType="{x:Type ToggleButton}">
												<Setter Property="OverridesDefaultStyle" Value="True"/>
												<Setter Property="IsTabStop" Value="False"/>
												<Setter Property="Focusable" Value="False"/>
												<Setter Property="ClickMode" Value="Press"/>
												<Setter Property="Template">
													<Setter.Value>
														<ControlTemplate TargetType="{x:Type ToggleButton}">
															<Grid SnapsToDevicePixels="True" Background="#00000000">
																<Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
																	<Path x:Name="Arrow" Data="M0,0L3.5,4 7,0z" Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center"/>
																</Grid>
															</Grid>
															<ControlTemplate.Triggers>
																<Trigger Property="IsChecked" Value="True"/>
																<Trigger Property="IsEnabled" Value="False">
																	<Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
																</Trigger>
															</ControlTemplate.Triggers>
														</ControlTemplate>
													</Setter.Value>
												</Setter>
											</Style>
										</ToggleButton.Style>
									</ToggleButton>
									<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="8,6,4,6"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
										<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
										<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
									</Trigger>
									<Trigger Property="HasItems" Value="False">
										<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
									</Trigger>
									<Trigger Property="IsEnabled" Value="False">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
										<Setter Property="Background" Value="#FFF4F4F4"/>
									</Trigger>
									<Trigger Property="IsGrouping" Value="True">
										<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
									</Trigger>
									<Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
										<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
										<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<Trigger Property="IsEditable" Value="True">
							<Setter Property="BorderBrush">
								<Setter.Value>
									<LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
										<GradientStop Color="#FFABADB3" Offset="0.05"/>
										<GradientStop Color="#FFE2E3EA" Offset="0.07"/>
										<GradientStop Color="#FFE3E9EF" Offset="1"/>
									</LinearGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
							<Setter Property="IsTabStop" Value="False"/>
							<Setter Property="Padding" Value="3"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type UIComponents:WpfComboInput}">
										<Grid x:Name="Placement" SnapsToDevicePixels="True">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<Popup x:Name="PART_Popup" AllowsTransparency="True" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
												<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}">
													<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
														<ScrollViewer x:Name="DropDownScrollViewer">
															<Grid RenderOptions.ClearTypeHint="Enabled">
																<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
																	<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
																</Canvas>
																<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
															</Grid>
														</ScrollViewer>
													</Border>
												</Microsoft_Windows_Themes:SystemDropShadowChrome>
											</Popup>
											<Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}"/>
											<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
												<TextBox.Style>
													<Style TargetType="{x:Type TextBox}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="AllowDrop" Value="True"/>
														<Setter Property="MinWidth" Value="0"/>
														<Setter Property="MinHeight" Value="0"/>
														<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
														<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
														<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type TextBox}">
																	<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</TextBox.Style>
											</TextBox>
											<ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
												<ToggleButton.Style>
													<Style TargetType="{x:Type ToggleButton}">
														<Setter Property="OverridesDefaultStyle" Value="True"/>
														<Setter Property="IsTabStop" Value="False"/>
														<Setter Property="Focusable" Value="False"/>
														<Setter Property="ClickMode" Value="Press"/>
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate TargetType="{x:Type ToggleButton}">
																	<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="False" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
																		<Path x:Name="Arrow" Data="M0,0L3.5,4 7,0z" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
																	</Microsoft_Windows_Themes:ButtonChrome>
																	<ControlTemplate.Triggers>
																		<Trigger Property="IsChecked" Value="True">
																			<Setter Property="RenderPressed" TargetName="Chrome" Value="True"/>
																		</Trigger>
																		<Trigger Property="IsEnabled" Value="False">
																			<Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
													</Style>
												</ToggleButton.Style>
											</ToggleButton>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="IsKeyboardFocusWithin" Value="True">
												<Setter Property="Foreground" Value="Black"/>
											</Trigger>
											<Trigger Property="IsDropDownOpen" Value="True">
												<Setter Property="RenderFocused" TargetName="Border" Value="True"/>
											</Trigger>
											<Trigger Property="HasItems" Value="False">
												<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
											</Trigger>
											<Trigger Property="IsEnabled" Value="False">
												<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
												<Setter Property="Background" Value="#FFF4F4F4"/>
											</Trigger>
											<Trigger Property="IsGrouping" Value="True">
												<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
											</Trigger>
											<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
												<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
												<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
											</Trigger>
											<Trigger Property="CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
												<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
												<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Trigger>
					</Style.Triggers>
				</Style>
				<Style TargetType="{x:Type ListBoxItem}">
  		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
	</Style>
	<Style TargetType="{x:Type TextBox}">
  		<Setter Property="UndoLimit" Value="100"/>
	</Style>
	<Style TargetType="{x:Type UIComponents:WpfButton}">
  		<Setter Property="Padding" Value="5,1" />
	</Style>
	<Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
	  <Setter Property="Control.Template" Value="{x:Null}"/>
	</Style>
	<Style x:Key="CueTextBoxStyle" TargetType="{x:Type TextBox}">
		<Setter Property="Foreground" Value="{Binding Foreground}"/>
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Height" Value="{Binding ActualHeight}"/>
		<Setter Property="Width" Value="{Binding ActualWidth}"/>
		<Setter Property="FontStyle" Value="{Binding FontStyle}"/>
		<Setter Property="FontWeight" Value="{Binding FontWeight}"/>
		<Setter Property="FontFamily" Value="{Binding FontFamily}"/>
		<Setter Property="FontSize" Value="{Binding FontSize}"/>
		<Setter Property="TextWrapping" Value="{Binding TextWrapping}"/>
		<Setter Property="MinWidth" Value="{Binding MinWidth}"/>
		<Setter Property="MinHeight" Value="{Binding MinHeight}"/>
		<Setter Property="MaxWidth" Value="{Binding MaxWidth}"/>
		<Setter Property="MaxHeight" Value="{Binding MaxHeight}"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style TargetType="{x:Type UIComponents:PromptuTextBox}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
					<GradientStop Color="#FFABADB3" Offset="0.05"/>
					<GradientStop Color="#FFE2E3EA" Offset="0.07"/>
					<GradientStop Color="#FFE3E9EF" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="UndoLimit" Value="100"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="AllowDrop" Value="True"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Validation.ErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<Grid SnapsToDevicePixels="True">
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<AdornedElementPlaceholder x:Name="adornedPlaceholder" Grid.Row="0" />
						<Grid Grid.Column="0" Grid.Row="1" HorizontalAlignment="Left">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<Rectangle Fill="#ffe5e5" Grid.ColumnSpan="2" Margin="0" Grid.Row="1" Stroke="#ffb2b2" RadiusX="2" RadiusY="2"/>
							<Rectangle Fill="#ffe5e5" Height="1.48" Margin="6,0,0,-2" VerticalAlignment="Bottom" Width="13.5" HorizontalAlignment="Left"/>
							<Path Fill="#ffe5e5" Data="M0,10 L0,0 14,9.5" Margin="5,0,0,-1.5" Stretch="Fill" Stroke="#ffb2b2" StrokeEndLineCap="Round"/>
							<TextBlock Grid.Row="1" Margin="3" Grid.ColumnSpan="2" Text="{Binding ElementName=adornedPlaceholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type UIComponents:PromptuTextBox}">
					<Microsoft_Windows_Themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="True">
						<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Microsoft_Windows_Themes:ListBoxChrome>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="CueDisplayed" Value="True">
							<Setter Property="FontStyle" Value="Italic"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="CommandLinkUnmousedOver" Color="#FF002266"/>
	<Style TargetType="{x:Type UIComponents:CommandLink}">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="#FFF3F3F3" Offset="0"/>
					<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
					<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
					<GradientStop Color="#FFCDCDCD" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="#FF707070"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="#FF003399"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type UIComponents:CommandLink}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2" To="MouseOver">
										<Storyboard>
											<DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bd"/>
											<ColorAnimation Duration="0:0:0.3" To="#7CEFEFEF" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="bd"/>
											<ColorAnimation Duration="0:0:0.3" To="#93FFFFFF" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="bd"/>
											<ColorAnimation Duration="0:0:0.3" To="#FFD8D8D8" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="bd"/>
											<DoubleAnimation Duration="0:0:0.3" To="0.003" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="bd"/>
											<DoubleAnimation Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="bd"/>
										</Storyboard>
									</VisualTransition>
									<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.4"/>
									<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.2" To="Pressed"/>
									<VisualTransition From="Pressed" GeneratedDuration="0:0:0.2" To="MouseOver"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bd">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="bd">
											<EasingColorKeyFrame KeyTime="0" Value="#7CEFEFEF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="bd">
											<EasingColorKeyFrame KeyTime="0" Value="#93FFFFFF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="bd">
											<EasingColorKeyFrame KeyTime="0" Value="#FFD8D8D8"/>
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="bd">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.003"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="bd">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
											<EasingColorKeyFrame KeyTime="0" Value="#FF0078EF"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock1">
											<EasingColorKeyFrame KeyTime="0" Value="#FF0078EF"/>
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.15"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bd_pressed">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="bd_pressed">
											<EasingColorKeyFrame KeyTime="0" Value="#417C7C7C"/>
										</ColorAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="bd_pressed">
											<EasingColorKeyFrame KeyTime="0" Value="#3CDADADA"/>
										</ColorAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="bd_pressed">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.076"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1" To="Focused"/>
									<VisualTransition From="Focused" GeneratedDuration="0:0:0.1"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused">
									
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bd_focus">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
									
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="bd_pressed" SnapsToDevicePixels="True" CornerRadius="{Binding CornerRadius, ElementName=realborder}" Padding="{Binding Padding, ElementName=realborder}" BorderThickness="1" Opacity="0" BorderBrush="#FFB1B1B1">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Offset="0"/>
									<GradientStop Offset="0.076"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="bd_focus" SnapsToDevicePixels="True" CornerRadius="{Binding CornerRadius, ElementName=realborder}" Padding="{Binding Padding, ElementName=realborder}" BorderThickness="1" Opacity="0" BorderBrush="{DynamicResource HighlightBorderColor}"/>
						<Border x:Name="bd" SnapsToDevicePixels="True" CornerRadius="{Binding CornerRadius, ElementName=realborder}" Padding="{Binding Padding, ElementName=realborder}" BorderThickness="1" Opacity="0" BorderBrush="#FFD8D8D8">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Offset="0"/>
									<GradientStop Offset="1"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						<Border x:Name="realborder" CornerRadius="3" Padding="11">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<Rectangle x:Name="rect" Width="16" Height="16" VerticalAlignment="Center" Fill="{DynamicResource CommandLinkArrow}" Margin="0,0,7,0">
									<Rectangle.Effect>
										<DropShadowEffect PresentationOptions:Freeze="True" Opacity="0.15" ShadowDepth="2" Direction="345"/>
									</Rectangle.Effect>
								</Rectangle>
								<Rectangle x:Name="rectangle" Width="16" Height="16" VerticalAlignment="Center" Fill="White" OpacityMask="{Binding Fill, ElementName=rect}" Margin="0,0,5,0" Opacity="0"/>
								<Label x:Name="textBlock" Target="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UIComponents:CommandLink}}}" Grid.ColumnSpan="1" Margin="0" Content="{TemplateBinding Label}" Grid.Column="1" FontSize="14.667" Foreground="#FF002266" Padding="0"/>
								<TextBlock x:Name="textBlock1" Grid.ColumnSpan="1" Margin="0" Grid.Row="1" TextWrapping="Wrap" Text="{TemplateBinding SupplementalExplaination}" Grid.Column="1" Foreground="#FF002266"/>
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Text" Value="" SourceName="textBlock1">
							<Setter Property="Visibility" TargetName="textBlock1" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type UIComponents:SuperTabControl}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<ListBox x:Name="PART_List" Margin="0" ItemTemplate="{DynamicResource SuperTabHeaderTemplate}" ItemContainerStyle="{DynamicResource SuperTabStyle}" Padding="1" Style="{DynamicResource ListBoxStyle1}" BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" MinWidth="125"/>
						<Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" BorderThickness="1" Height="Auto" Width="Auto" Margin="5,0,0,0" VerticalAlignment="Stretch" Grid.Column="1" CornerRadius="2" SnapsToDevicePixels="True" Background="White">
							<ContentControl x:Name="PART_ItemContent" Focusable="False" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch"/>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		<DataTemplate x:Key="SuperTabHeaderTemplate">
			<StackPanel Orientation="Horizontal">
				<Image Source="{Binding Image}" MaxHeight="25" VerticalAlignment="Center"/>
				<TextBlock x:Name="textBlock" Margin="1" Text="{Binding Header}" VerticalAlignment="Center"/>
			</StackPanel>
		</DataTemplate>
		<Style x:Key="SuperTabStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="Template">		
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid Height="Auto" Margin="1" SnapsToDevicePixels="True">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0" To="MouseOver"/>
										<VisualTransition From="MouseOver" GeneratedDuration="0"/>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal"/>
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd_mouseover">
												<EasingDoubleKeyFrame KeyTime="0" Value="0.7"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd_mouseover">
												<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd_pressed">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[4].(GradientStop.Color)" Storyboard.TargetName="Bd_pressed">
												<EasingColorKeyFrame KeyTime="0" Value="#FFFFDA56"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="Bd_pressed">
												<EasingColorKeyFrame KeyTime="0" Value="#FFFFD952"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="Bd_pressed">
												<EasingColorKeyFrame KeyTime="0" Value="#FFFFD050"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[4].(GradientStop.Color)" Storyboard.TargetName="Bd_pressed">
												<EasingColorKeyFrame KeyTime="0" Value="#FFFFC444"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="Bd_pressed">
												<EasingColorKeyFrame KeyTime="0" Value="#FFFFBA40"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="Bd_pressed">
												<EasingColorKeyFrame KeyTime="0" Value="#FFFFC340"/>
											</ColorAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd_pressed">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="Bd_pressed">
												<EasingDoubleKeyFrame KeyTime="0" Value="0.882"/>
											</DoubleAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Bd_pressed">
												<EasingColorKeyFrame KeyTime="0" Value="#FFFFE56E"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Bd_pressed" SnapsToDevicePixels="true" Padding="3" CornerRadius="3" Margin="0,0,-0.003,0" d:LayoutOverrides="Width, Height" BorderThickness="1" Opacity="0">
								<!--Border.BorderBrush>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFFA400" Offset="1"/>
										<GradientStop Color="#FF7C6741"/>
									</LinearGradientBrush>
								</Border.BorderBrush>
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFE9A000"/>
										<GradientStop Color="#FFFFD76A" Offset="1"/>
										<GradientStop Color="#FFFFA040" Offset="0.498"/>
										<GradientStop Color="#FFFFA040" Offset="0.719"/>
										<GradientStop Color="#FFFFBD44" Offset="0.386"/>
										<GradientStop Color="#FFFFD29A" Offset="0.073"/>
									</LinearGradientBrush>
								</Border.Background-->
								<!--Border.BorderBrush>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFFA400" Offset="1"/>
										<GradientStop Color="#FF7C6741"/>
									</LinearGradientBrush>
								</Border.BorderBrush>
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFE9A000"/>
										<GradientStop Color="#FFFFD76A" Offset="1"/>
										<GradientStop Color="#FFFFD540" Offset="0.498"/>
										<GradientStop Color="#FFFFCC40" Offset="0.719"/>
										<GradientStop Color="#FFFFCD44" Offset="0.386"/>
										<GradientStop Color="#FFFFE99A" Offset="0.073"/>
									</LinearGradientBrush>
								</Border.Background-->
								<Border.BorderBrush>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFFA400" Offset="1"/>
										<GradientStop Color="#FF7C6741"/>
									</LinearGradientBrush>
								</Border.BorderBrush>
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFE9A000"/>
										<GradientStop Color="#FFFFD76A" Offset="1"/>
										<GradientStop Color="#FFFFBA40" Offset="0.498"/>
										<GradientStop Color="#FFFFC340" Offset="0.719"/>
										<GradientStop Color="#FFFFC444" Offset="0.386"/>
										<GradientStop Color="#FFFFE99A" Offset="0.073"/>
									</LinearGradientBrush>
								</Border.Background>
							</Border>
							<Border x:Name="Bd_mouseover" SnapsToDevicePixels="true" Padding="3" CornerRadius="3" Margin="0,0,-0.004,0" BorderThickness="1" d:LayoutOverrides="Width, Height" BorderBrush="#FFE2B000" Opacity="0">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#87FFE152" Offset="0.257"/>
										<GradientStop Color="#FFFFD871" Offset="0.997"/>
										<GradientStop Color="#FFFFDC36" Offset="0.366"/>
										<GradientStop Color="#FFFFC527" Offset="0.736"/>
										<GradientStop Color="#FFFFDE42" Offset="0.307"/>
									</LinearGradientBrush>
								</Border.Background>
							</Border>
							<Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" Padding="3,2" CornerRadius="3" Margin="0" d:LayoutOverrides="Width, Height" Background="{x:Null}">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,2"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="true"/>
									<Condition Property="Selector.IsSelectionActive" Value="false"/>
								</MultiTrigger.Conditions>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							</MultiTrigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
		<Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBox}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true" CornerRadius="2">
							<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="HueSpectrum" EndPoint="1,0.5" StartPoint="0,0.5">
			<GradientStop Color="Red" Offset="0"/>
			<GradientStop Color="Red" Offset="1"/>
			<GradientStop Color="Lime" Offset="0.33"/>
			<GradientStop Color="Blue" Offset="0.6666"/>
			<GradientStop Color="Yellow" Offset="0.1666"/>
			<GradientStop Color="Cyan" Offset="0.5"/>
			<GradientStop Color="Magenta" Offset="0.8332"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
			<GradientStop Color="white" Offset="0"/>
			<GradientStop Color="#B8E2F9" Offset="0.5"/>
			<GradientStop Color="#B0DFF8" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder" Color="#3C7FB1"/>
		<LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
			<GradientStop Color="#B8E4FA" Offset="0.25"/>
			<GradientStop Color="#5EB4E3" Offset="0.5"/>
			<GradientStop Color="#4C8BB4" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder" Color="#2C628B"/>
		<Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>
		<Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
		<Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
		<LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
			<GradientStop Color="White" Offset="0"/>
			<GradientStop Color="#F0EFEF" Offset="0.4"/>
			<GradientStop Color="#D6D5D5" Offset=".8"/>
		</LinearGradientBrush>
		<Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>
		<Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Height" Value="18"/>
			<Setter Property="Width" Value="10"/>
			<Setter Property="Foreground" Value="Gray"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Canvas SnapsToDevicePixels="true">
							<Canvas.RenderTransform>
								<TransformGroup>
									<TransformGroup.Children>
										<TransformCollection>
											<RotateTransform Angle="180"/>
											<TranslateTransform X="5" Y="9"/>
										</TransformCollection>
									</TransformGroup.Children>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted}"/>
							<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
							<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="Foreground" Value="Blue">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="IsDragging" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
								<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
								<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
								<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="white" Offset="0"/>
			<GradientStop Color="#B8E2F9" Offset="0.5"/>
			<GradientStop Color="#B0DFF8" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#B8E4FA" Offset="0.25"/>
			<GradientStop Color="#5EB4E3" Offset="0.5"/>
			<GradientStop Color="#4C8BB4" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="White" Offset="0"/>
			<GradientStop Color="#F0EFEF" Offset="0.4"/>
			<GradientStop Color="#D6D5D5" Offset=".8"/>
		</LinearGradientBrush>
		<Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Height" Value="18"/>
			<Setter Property="Width" Value="10"/>
			<Setter Property="Foreground" Value="Gray"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Canvas SnapsToDevicePixels="true">
							<Canvas.RenderTransform>
								<TranslateTransform X="5" Y="9"/>
							</Canvas.RenderTransform>
							<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackground}"/>
							<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
							<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="Foreground" Value="Blue">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="IsDragging" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
								<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
								<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
								<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#FFAEB1AF" Offset="0.1"/>
			<GradientStop Color="White" Offset=".9"/>
		</LinearGradientBrush>
		<Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="Transparent"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
		<Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>
		<Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Height" Value="22"/>
			<Setter Property="Width" Value="11"/>
			<Setter Property="Foreground" Value="Gray"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Canvas SnapsToDevicePixels="true">
							<Canvas.RenderTransform>
								<TranslateTransform X="5.5" Y="11"/>
							</Canvas.RenderTransform>
							<Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackground}"/>
							<Path x:Name="InnerBorder" Data="{StaticResource SliderThumbMiddleBorderGeometry}" Stroke="White"/>
							<Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}" Stroke="#FF929292"/>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="Foreground" Value="Blue">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="IsDragging" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
								<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
								<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="white" Offset="0"/>
			<GradientStop Color="#B8E2F9" Offset="0.5"/>
			<GradientStop Color="#B0DFF8" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="#B8E4FA" Offset="0.25"/>
			<GradientStop Color="#5EB4E3" Offset="0.5"/>
			<GradientStop Color="#4C8BB4" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="White" Offset="0"/>
			<GradientStop Color="#F0EFEF" Offset="0.4"/>
			<GradientStop Color="#D6D5D5" Offset=".8"/>
		</LinearGradientBrush>
		<Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Height" Value="10"/>
			<Setter Property="Width" Value="18"/>
			<Setter Property="Foreground" Value="Gray"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Canvas SnapsToDevicePixels="true">
							<Canvas.RenderTransform>
								<TransformGroup>
									<TransformGroup.Children>
										<TransformCollection>
											<RotateTransform Angle="90"/>
											<TranslateTransform X="9" Y="5"/>
										</TransformCollection>
									</TransformGroup.Children>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}"/>
							<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
							<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="Foreground" Value="Blue">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="IsDragging" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
								<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
								<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
			<GradientStop Color="white" Offset="0"/>
			<GradientStop Color="#B8E2F9" Offset="0.5"/>
			<GradientStop Color="#B0DFF8" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
			<GradientStop Color="#B8E4FA" Offset="0.25"/>
			<GradientStop Color="#5EB4E3" Offset="0.5"/>
			<GradientStop Color="#4C8BB4" Offset="1"/>
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
			<GradientStop Color="White" Offset="0"/>
			<GradientStop Color="#F0EFEF" Offset="0.4"/>
			<GradientStop Color="#D6D5D5" Offset=".8"/>
		</LinearGradientBrush>
		<Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Height" Value="10"/>
			<Setter Property="Width" Value="18"/>
			<Setter Property="Foreground" Value="Gray"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Canvas SnapsToDevicePixels="true">
							<Canvas.RenderTransform>
								<TransformGroup>
									<TransformGroup.Children>
										<TransformCollection>
											<RotateTransform Angle="-90"/>
											<TranslateTransform X="9" Y="5"/>
										</TransformCollection>
									</TransformGroup.Children>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted}"/>
							<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
							<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="Foreground" Value="Blue">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="IsDragging" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackgroundInverted}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
								<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
								<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="#FFAEB1AF" Offset="0.1"/>
			<GradientStop Color="White" Offset=".9"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA"/>
		<Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Height" Value="11"/>
			<Setter Property="Width" Value="22"/>
			<Setter Property="Foreground" Value="Gray"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Canvas SnapsToDevicePixels="true">
							<Canvas.RenderTransform>
								<TransformGroup>
									<TransformGroup.Children>
										<TransformCollection>
											<RotateTransform Angle="90"/>
											<TranslateTransform X="11" Y="5.5"/>
										</TransformCollection>
									</TransformGroup.Children>
								</TransformGroup>
							</Canvas.RenderTransform>
							<Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}"/>
							<Path x:Name="InnerBorder" Data="{StaticResource SliderThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
							<Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
						</Canvas>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="Foreground" Value="Blue">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
							</Trigger>
							<Trigger Property="IsDragging" Value="true">
								<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
								<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
								<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
								<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="BackgroundedSlider" TargetType="{x:Type Slider}">
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Foreground" Value="#FFC4C4C4"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Slider}">
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
								<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
								<Border x:Name="TrackBackground" BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}" BorderThickness="0" CornerRadius="1" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center" Background="{TemplateBinding Background}">
									<Canvas Margin="-6,-1">
										<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden"/>
									</Canvas>
								</Border>
								<Track x:Name="PART_Track" Grid.Row="1">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}">
											<Thumb.Background>
												<LinearGradientBrush EndPoint="23.227,0.466" StartPoint="0.432,0.477">
													<GradientStop Color="Black" Offset="0"/>
													<GradientStop Color="White" Offset="1"/>
												</LinearGradientBrush>
											</Thumb.Background>
										</Thumb>
									</Track.Thumb>
								</Track>
							</Grid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="TickPlacement" Value="TopLeft">
								<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
								<Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
								<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
							</Trigger>
							<Trigger Property="TickPlacement" Value="BottomRight">
								<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
								<Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
								<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
							</Trigger>
							<Trigger Property="TickPlacement" Value="Both">
								<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
								<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
							</Trigger>
							<Trigger Property="IsSelectionRangeEnabled" Value="true">
								<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Vertical">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Slider}">
								<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
										<TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
										<Border x:Name="TrackBackground" BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}" BorderThickness="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" Grid.Column="1" CornerRadius="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
											<Canvas Margin="-1,-6">
												<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Width="4.0"/>
											</Canvas>
										</Border>
										<Track x:Name="PART_Track" Grid.Column="1">
											<Track.DecreaseRepeatButton>
												<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
											</Track.DecreaseRepeatButton>
											<Track.IncreaseRepeatButton>
												<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
											</Track.IncreaseRepeatButton>
											<Track.Thumb>
												<Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}"/>
											</Track.Thumb>
										</Track>
									</Grid>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="TickPlacement" Value="TopLeft">
										<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
										<Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
										<Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
									</Trigger>
									<Trigger Property="TickPlacement" Value="BottomRight">
										<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
										<Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}"/>
										<Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
									</Trigger>
									<Trigger Property="TickPlacement" Value="Both">
										<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
										<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
									</Trigger>
									<Trigger Property="IsSelectionRangeEnabled" Value="true">
										<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
									</Trigger>
									<Trigger Property="IsKeyboardFocused" Value="true">
										<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<UIComponents:ZeroToOnePercentageConverter x:Key="zeroToOnePercentageConverter"/>
		<UIComponents:RgbHexConverter x:Key="hexColorConverter"/>
		<UIComponents:DoubleRounderConverter x:Key="doubleRounderConverter"/>
		<ControlTemplate x:Key="HSVColorSliderControlTemplate" TargetType="{x:Type UIComponents:HSVColorSlider}">
			<Grid Margin="7">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition MinWidth="200"/>
					<ColumnDefinition Width="Auto" MinWidth="75"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Label x:Name="hueLabel" Content="{UIComponents:LocalizedValue HueLabel}" HorizontalAlignment="Left" Margin="0,0,5,7" d:LayoutOverrides="Height" VerticalAlignment="Center"/>
				<Slider x:Name="PART_HueSlider" HorizontalAlignment="Stretch" Margin="0,0,0,7" d:LayoutOverrides="Height" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Style="{DynamicResource BackgroundedSlider}" Background="{DynamicResource HueSpectrum}" TickFrequency="0.01" IsSnapToTickEnabled="True"/>
				<UIComponents:NumericUpDown Grid.Column="2" Margin="7,0,0,7" Grid.RowSpan="1" Template="{DynamicResource NumericUpDownTemplate}" VerticalAlignment="Center" Value="{Binding Value, ElementName=PART_HueSlider, Mode=TwoWay}" Maximum="360"/>
				<Label x:Name="saturationLabel" Content="{UIComponents:LocalizedValue SaturationLabel}" HorizontalAlignment="Left" Margin="0,0,5,7" VerticalAlignment="Center" Grid.Row="1"/>
				<Slider x:Name="PART_SaturationSlider" HorizontalAlignment="Stretch" Margin="0,0,0,7" d:LayoutOverrides="Height" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Style="{DynamicResource BackgroundedSlider}" IsSnapToTickEnabled="True" TickFrequency="0.0001" LargeChange="0.01" SmallChange="0.001">
					<Slider.Background>
						<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
							<GradientStop Color="White" Offset="0"/>
							<GradientStop Color="Red" Offset="1"/>
						</LinearGradientBrush>
					</Slider.Background>
				</Slider>
				<UIComponents:NumericUpDown Grid.Column="2" Margin="7,0,0,7" Grid.RowSpan="1" Template="{DynamicResource NumericUpDownTemplate}" VerticalAlignment="Center" Value="{Binding Value, Converter={StaticResource zeroToOnePercentageConverter}, ElementName=PART_SaturationSlider, Mode=TwoWay}" Maximum="100" Grid.Row="1"/>
				<Label x:Name="valueLabel" Content="{UIComponents:LocalizedValue BrightnessLabel}" HorizontalAlignment="Left" Margin="0,0,5,7" VerticalAlignment="Center" Grid.Row="2"/>
				<Slider x:Name="PART_ValueSlider" HorizontalAlignment="Stretch" Margin="0,0,0,7" d:LayoutOverrides="Height" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Style="{DynamicResource BackgroundedSlider}" IsSnapToTickEnabled="True" TickFrequency="0.0001" LargeChange="0.01" SmallChange="0.001">
					<Slider.Background>
						<LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
							<GradientStop Color="Black" Offset="0"/>
							<GradientStop Color="Red" Offset="1"/>
						</LinearGradientBrush>
					</Slider.Background>
				</Slider>
				<UIComponents:NumericUpDown Grid.Column="2" Margin="7,0,0,7" Grid.RowSpan="1" Template="{DynamicResource NumericUpDownTemplate}" VerticalAlignment="Center" Value="{Binding Value, Converter={StaticResource zeroToOnePercentageConverter}, ElementName=PART_ValueSlider, Mode=TwoWay}" Maximum="100" Grid.Row="2"/>
				<Label x:Name="hexValueLabel" Content="{UIComponents:LocalizedValue HexValueLabel}" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Grid.Row="3"/>
				<TextBox Grid.Column="1" Margin="0" Grid.Row="3" TextWrapping="Wrap" Text="{Binding Color, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource hexColorConverter}}" HorizontalAlignment="Left" VerticalAlignment="Center" Width="100"/>
			</Grid>
		</ControlTemplate>
		<ControlTemplate x:Key="NumericUpDownTemplate" TargetType="{x:Type UIComponents:NumericUpDown}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<!--Grid.RowDefinitions>
					<RowDefinition Height="0.5*"/>
					<RowDefinition Height="0.5*"/>
				</Grid.RowDefinitions-->
				<TextBox HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource doubleRounderConverter}}" Grid.RowSpan="2" Margin="0,0,-0.041,0" d:LayoutOverrides="Width"/>
				<Button x:Name="PART_MinusButton" Grid.Column="1" Width="{Binding ActualWidth, ElementName=PART_PlusButton}">
					<TextBlock Text="-" Margin="0,-13,0,-15" FontSize="16"/>
					<!--Rectangle Fill="{DynamicResource Minus}" Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" /-->
				</Button>
				<Button x:Name="PART_PlusButton" Grid.Column="2">
					<TextBlock Text="+" Margin="0,-10,0,-15"/>
					<!--Rectangle Fill="{DynamicResource Plus}" Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="True" /-->
				</Button>
			</Grid>
		</ControlTemplate>
		<LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
			<GradientStop Color="#E1E1E1" Offset="0"/>
			<GradientStop Color="#EDEDED" Offset="0.20"/>
			<GradientStop Color="#EDEDED" Offset="0.80"/>
			<GradientStop Color="#E3E3E3" Offset="1"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
		<Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
			<GradientStop Color="#E1E1E1" Offset="0"/>
			<GradientStop Color="#EDEDED" Offset="0.20"/>
			<GradientStop Color="#EDEDED" Offset="0.80"/>
			<GradientStop Color="#E3E3E3" Offset="1"/>
		</LinearGradientBrush>
		<Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Focusable" Value="false"/>
			<Setter Property="IsTabStop" Value="false"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type RepeatButton}">
						<Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="PlusMinusScrollBar" TargetType="{x:Type ScrollBar}">
			<Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
			<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Orientation" Value="Horizontal">
					<Setter Property="Width" Value="Auto"/>
					<Setter Property="MinWidth" Value="0"/>
					<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
					<Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ScrollBar}">
								<Grid x:Name="Bg" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
									<Grid.ColumnDefinitions>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
										<ColumnDefinition Width="0.00001*"/>
										<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									</Grid.ColumnDefinitions>
									<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
									<Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
										<Track.DecreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.DecreaseRepeatButton>
										<Track.IncreaseRepeatButton>
											<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
										</Track.IncreaseRepeatButton>
										<Track.Thumb>
											<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
										</Track.Thumb>
									</Track>
									<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<ControlTemplate x:Key="EmptyButton" TargetType="{x:Type Button}">
			<ContentPresenter/>
			<ControlTemplate.Triggers>
				<Trigger Property="IsEnabled" Value="False">
				</Trigger>
			</ControlTemplate.Triggers>
		</ControlTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
